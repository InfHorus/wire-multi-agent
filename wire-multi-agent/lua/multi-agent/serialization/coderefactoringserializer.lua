local self   	= {}
local pairs		= pairs
local ipairs 	= ipairs
local tostring 	= tostring
local tonumber 	= tonumber
local print		= print

function self:InternalId ()
	return "WireMultiAgent:CodeRefactoring"
end

function self:Constructor ()
	self.ImportedSerialization 	= WireMultiAgent ["WireMultiAgent:iSerializer"].importedExpression2Codes
	self.ImportedSequence		= "([A-Z][A-Za-z0-9_]*)"
	
	self.ImportedE2Functions = 
	{
		"useClk",
		"fileLoadQueued",
		"ignite",
		"setMass",
		"quat",
		"weld",
		"rangerReset",
		"egpObjectType",
		"create",
		"closeAll",
		"easeInBack",
		"setTextColor",
		"inrange",
		"toLocal",
		"findPlayerByName",
		"round",
		"holoAlpha",
		"id",
		"sechr",
		"getNoClipping",
		"mod",
		"ammoCount",
		"row",
		"up",
		"setFont",
		"addPlayer",
		"setPosition",
		"findClipFromName",
		"getConstraints",
		"rowMatrix4",
		"right",
		"plySetAmmo",
		"egpParent",
		"getExtensions",
		"clip1",
		"runOnList",
		"count",
		"getPlayers",
		"setVisible",
		"fractionLeftSolid",
		"getValue",
		"fileLoadingList",
		"setPlayers",
		"writeString",
		"getUserGroup",
		"httpUrlDecode",
		"minVec",
		"getChecked",
		"maxVec",
		"particleSetMaterial",
		"shift",
		"removeAll",
		"isConstrainedTo",
		"find",
		"readArray",
		"vec",
		"findClearBlackPlayerPropList",
		"soundVolume",
		"isOnGround",
		"alignTop",
		"egpClear",
		"chatClk",
		"entity",
		"concmd",
		"egpObjectContainsPoint",
		"setPos",
		"egpBox",
		"findDisallowPlayerProps",
		"modify",
		"findExcludeEntities",
		"signalClk",
		"z",
		"keyClk",
		"seatSpawn",
		"findExcludePlayer",
		"getMemoryUsedK",
		"selfDestruct",
		"propSetElasticity",
		"rope",
		"alignRight",
		"identity",
		"mix",
		"remove",
		"csc",
		"dbutton",
		"convar",
		"egpHasObject",
		"keys",
		"findToTable",
		"setAngle",
		"airDensity",
		"setColumn",
		"setCollisions",
		"lastDeathAttacker",
		"plyGive",
		"toString",
		"setEntIndex",
		"dsSendDirect",
		"holoBoneScale",
		"fileMaxSize",
		"rangerFlags",
		"holoModelAny",
		"egpSize",
		"setColor",
		"npcRelationshipByOwner",
		"propGetFriction",
		"world",
		"clamp",
		"matrix",
		"frictionSnapshot",
		"npcGetTarget",
		"rangerOffset",
		"getWireOutputs",
		"signalSendToPlayer",
		"findByName",
		"invert",
		"engineFrameTime",
		"log",
		"egpFont",
		"friends",
		"tanhr",
		"rowMatrix2",
		"conj",
		"toWorldPosAng",
		"stripWeapon",
		"egpConnectedUsers",
		"csqrt",
		"rangerAngleHull",
		"setHeight",
		"cosr",
		"randvec4",
		"setMaterialFromScreen",
		"enableFallDamage",
		"dock",
		"applyAngForce",
		"soundStop",
		"isInWorld",
		"getColor4",
		"floor",
		"toAngle",
		"dsJoinGroup",
		"volume",
		"dlistview",
		"aimNormal",
		"writeUnicodeString",
		"asin",
		"plyHasGod",
		"gmatch",
		"toUnicodeChar",
		"toUnit",
		"dpanel",
		"alignBottom",
		"dpropertysheet",
		"egpPos",
		"randvec2",
		"keySprint",
		"plyStripWeapons",
		"getSideMove",
		"clear",
		"log2",
		"exp",
		"findSortByDistance",
		"setEnabled",
		"setRadius",
		"findExcludeClass",
		"setMaterialIndex",
		"findIncludePlayerProps",
		"findAllowPlayer",
		"trace",
		"element",
		"setImage",
		"getColor",
		"gRemoveAll",
		"plyIgnite",
		"egpTriangle",
		"pos",
		"rgb2digi",
		"clk",
		"httpClk",
		"sqrt",
		"reverse",
		"holoModel",
		"findDisallowPlayer",
		"asinr",
		"center",
		"jsonEncode",
		"teamPlayers",
		"stoptimer",
		"armor",
		"inv",
		"concat",
		"broadcastRemoteEvent",
		"setNoClipping",
		"modifyChat",
		"getInflictor",
		"setSortItems",
		"findExcludePlayerProps",
		"yaw",
		"egpQueueClk",
		"lastSaidTeam",
		"holoCreate",
		"isFlashlightOn",
		"holoBoneAng",
		"getFlexBounds",
		"dateUTC",
		"min",
		"holoPlayerColor",
		"time",
		"closePlayer",
		"setElement",
		"fileListClk",
		"ceil",
		"runOnSignal",
		"glonEncode",
		"x",
		"alignLeft",
		"lastWeaponEquip",
		"egpDrawTopLeft",
		"normalized",
		"findAllowBlockedClasses",
		"getMax",
		"isVisible",
		"lastDeathTime",
		"setVertices",
		"keyLeftTurn",
		"ioOutputEntities",
		"getWidth",
		"isCrouch",
		"forward",
		"getSize",
		"setAmmo",
		"aabbMax",
		"w",
		"teamDeaths",
		"removeLine",
		"setAngVelocityInstant",
		"setAlpha",
		"shiftR",
		"print",
		"showPalette",
		"soundDSP",
		"disableFallDamage",
		"dmgInflictor",
		"setDrawOutlinedRect",
		"findClipToName",
		"egpRoundedBoxOutline",
		"findIncludePlayer",
		"setWidth",
		"holoBonePos",
		"inf",
		"velAtPoint",
		"tickClk",
		"getMinHeight",
		"tan",
		"particleSetStartSize",
		"outerProduct",
		"setClip1",
		"holoUnparent",
		"soundPlay",
		"soundPlaying",
		"findClearBlackList",
		"getAttacker",
		"eyeTrace",
		"setCornerRadius",
		"keyRight",
		"setDrag",
		"hydraulic",
		"egpCopy",
		"randint",
		"getSkin",
		"axis",
		"teleport",
		"egpAlign",
		"setY",
		"soundPitch",
		"weapon",
		"egpLine",
		"egpObjectTypes",
		"egpScrSize",
		"hide",
		"gGetGroup",
		"trusts",
		"gTable",
		"toUnicodeByte",
		"matchFirst",
		"sendMessageCenter",
		"attachments",
		"egpHUDSetPlayer",
		"takeDamage",
		"keyAttack1",
		"giveAmmo",
		"last",
		"toRad",
		"setRow",
		"fraction",
		"comp",
		"timeConnected",
		"egpBoxOutline",
		"egpLoadFrame",
		"frac",
		"findDisallowEntity",
		"addChoice",
		"rangerHull",
		"removePlayer",
		"angles",
		"setSize",
		"inputType",
		"bShl",
		"dot",
		"getFlexCount",
		"holoIndex",
		"getSizeNum",
		"remoteSetCode",
		"setIcon",
		"getAnimationByName",
		"sum",
		"dmodelpanel",
		"replaceRE",
		"setText",
		"sech",
		"name",
		"constraintBreak",
		"signalSend",
		"angVelVector",
		"signalClearOnRemove",
		"softQuota",
		"isValid",
		"attachmentAng",
		"getObjectType",
		"keyLeft",
		"removeTrails",
		"getReturnType",
		"enableKeyboardInput",
		"findAllowEntity",
		"unset",
		"fileRead",
		"glonError",
		"getPos",
		"replace",
		"propPhysicalMaterial",
		"minFrictionMass",
		"play",
		"attachmentPos",
		"clone",
		"arg",
		"isServerLaggingH",
		"abs",
		"egpHudEnable",
		"parentTo",
		"propDraw",
		"date",
		"bXor",
		"egpScale",
		"setMinHeight",
		"matrix4",
		"qRotation",
		"dspawnicon",
		"aabbWorldSize",
		"rangerFilter",
		"egp3DTracker",
		"depth",
		"readString",
		"setNumeric",
		"keyBack",
		"dcolormixer",
		"getMaxSpeed",
		"cos",
		"eyeAnglesVehicle",
		"jsonDecodeTableExternal",
		"getIndent",
		"isnan",
		"findClipToBox",
		"match",
		"getConnectedEntities",
		"column",
		"getUpSpeed",
		"selectWeapon",
		"setZ",
		"egpSaveFrame",
		"ops",
		"getRadius",
		"egpPoly",
		"egpColor",
		"maxIndex",
		"fileWriteQueued",
		"frexp",
		"isAdmin",
		"boxMin",
		"clip2Size",
		"setRoll",
		"root",
		"matrix2",
		"sign",
		"playerDisconnectClk",
		"holoBodygroups",
		"teamFrags",
		"egpAngle",
		"setType",
		"ranger",
		"setIndent",
		"hint",
		"holoSkin",
		"sec",
		"applyTorque",
		"i",
		"pointContentsArray",
		"httpCanRequest",
		"hasConstraints",
		"setChecked",
		"setOwner",
		"ballsocket",
		"winch",
		"setDiagonal",
		"giveWeapon",
		"max",
		"dimagebutton",
		"height",
		"maxquota",
		"hash",
		"egpMaxUmsgPerSecond",
		"getWeapon",
		"egpTriangleOutline",
		"findByModel",
		"toWorldAng",
		"holoDelete",
		"makePopup",
		"egpTextLayout",
		"isDamageTracked",
		"getImage",
		"setOrder",
		"findClearBlackModelList",
		"dmgForce",
		"clipFromTypeid",
		"plyFreeze",
		"findPlayerUpdateRate",
		"getDamage",
		"getAngle",
		"k",
		"egpGlobalVertices",
		"getExtensionStatus",
		"effect",
		"exit",
		"sinr",
		"toWorld",
		"secondaryAmmoType",
		"getSkinCount",
		"angVel",
		"findIncludeClass",
		"keyRightTurn",
		"setDeleteOnClose",
		"holoClip",
		"y",
		"findExcludeEntity",
		"setDecimals",
		"hasInput",
		"vonDecode",
		"toLocalAxis",
		"getHeight",
		"podStripWeapons",
		"egpQueueClkPly",
		"steamID64",
		"unicodeLength",
		"particleSetDuration",
		"egpText",
		"findClipToModel",
		"qj",
		"holoCanCreate",
		"runOnFileList",
		"stopAllTimers",
		"egpOrder",
		"rgb2hsv",
		"rotationAxis",
		"tanr",
		"rangerHitEntities",
		"egpCircle",
		"emitSound",
		"boneManipulate",
		"containsPoint",
		"setMaterial",
		"egpobject",
		"inertia",
		"draw",
		"accountID",
		"outputType",
		"lookupAttachment",
		"setClip2",
		"toLocalPosAng",
		"dsSend",
		"soundLevel",
		"applyOffsetForce",
		"dsGetGroups",
		"enableMouseInput",
		"vec4",
		"readCell",
		"getData",
		"egpAlpha",
		"getEnabled",
		"holoRenderFX",
		"ang",
		"inputClk",
		"egpGlobalFiltering",
		"setModel",
		"holoClipEnabled",
		"propSetFriction",
		"isTyping",
		"findClearWhitePlayerPropList",
		"fileLoading",
		"driver",
		"identity2",
		"globalVertices",
		"signalSenderId",
		"toByte",
		"egpResolution",
		"lastSaid",
		"bOr",
		"findDisallowModel",
		"rgb2hsl",
		"isFallDamage",
		"setNoCollideAll",
		"getAmount",
		"dsGetGroup",
		"setAutoStretchVertical",
		"findClipToSphere",
		"findIncludeEntities",
		"hasNoCollideAll",
		"egpOrderBelow",
		"getMinWidth",
		"setFOV",
		"copyFrom",
		"csch",
		"nowirelink",
		"sendRemoteEvent",
		"addColumn",
		"easeInBounce",
		"easeOutQuart",
		"lastWeaponSwitchPlayer",
		"setHealth",
		"egpMaxObjects",
		"getPlayerColor",
		"egpFidelity",
		"maxOfType",
		"applyPlayerForce",
		"children",
		"lastSaidWhen",
		"signalSender",
		"toArray",
		"coth",
		"massCenterL",
		"parentBone",
		"random",
		"holoVisible",
		"repeat",
		"cosh",
		"plyExtinguish",
		"isServerLaggingM",
		"findClipToEntities",
		"fileAppend",
		"exists",
		"easeInSine",
		"rangerOffsetHull",
		"interval",
		"randvec",
		"egpScrH",
		"setInflictor",
		"set",
		"easeOutExpo",
		"elevation",
		"sinhr",
		"easeOutBounce",
		"playerCanPrint",
		"egpHudToggle",
		"setW",
		"getAnimation",
		"plySetPos",
		"lastConnectedPlayer",
		"holoAng",
		"isNPC",
		"dmgVictim",
		"holoColor",
		"isDedicated",
		"isSuperAdmin",
		"jsonEncodeExternal",
		"vguiClk",
		"plySetSpeed",
		"egpWedgeOutline",
		"getSizable",
		"setX",
		"real",
		"dcombobox",
		"det",
		"shiftL",
		"vel",
		"jsonDecode",
		"stripWeapons",
		"getForwardMove",
		"clipToTypeid",
		"findClearWhiteClassList",
		"makeStatue",
		"noegpobject",
		"egpRadius",
		"duped",
		"getForwardSpeed",
		"setForce",
		"removeAmmo",
		"aimPos",
		"radius",
		"ncount",
		"getServerFPS2",
		"rotate",
		"easeInCubic",
		"parentToCursor",
		"setPhysicalMaterial",
		"soundPurge",
		"cothr",
		"runOnPlayerConnect",
		"setScale",
		"egpQueueScreen",
		"setSizable",
		"toNumber",
		"keyPressed",
		"clip2",
		"cross",
		"slider",
		"setMin",
		"vguiClkValues",
		"writeArray",
		"inputs",
		"particleSetEndSize",
		"teamName",
		"getPosition",
		"gShare",
		"matType",
		"hideChat",
		"adj",
		"printDriver",
		"getPosAng",
		"easeInOutElastic",
		"egpLineStrip",
		"findClipFromEntity",
		"sin",
		"playerDamage",
		"dockPadding",
		"maxFrictionMass",
		"npcRelationship",
		"setOrderAbove",
		"holoMaterial",
		"rangerIgnoreWorld",
		"getTitle",
		"egpWedge",
		"swapRows",
		"getText",
		"particleBounce",
		"pointHasContent",
		"isWorld",
		"playersAdmins",
		"npcGiveWeapon",
		"trackerParent",
		"propBreak",
		"isFrozen",
		"isWeldedTo",
		"egpObjectIndexes",
		"sunDirection",
		"npcSetTarget",
		"timeQuota",
		"getEditData",
		"findResult",
		"inNoclip",
		"bezier",
		"hsv2rgb",
		"easeInQuint",
		"dframe",
		"minIndex",
		"merge",
		"fileName",
		"egpColor4",
		"nlerp",
		"aabbSize",
		"jsonError",
		"findCanQuery",
		"lastDamageVictim",
		"toWorldAxis",
		"hardQuota",
		"index",
		"lastDeathInflictor",
		"easeOutElastic",
		"isPlayerHolding",
		"massCenter",
		"average",
		"setAttachment",
		"extinguish",
		"toChar",
		"toDeg",
		"setAng",
		"propStatic",
		"egpCircleOutline",
		"cot",
		"findAllowModel",
		"getOrder",
		"findClearWhiteEntityList",
		"findClipToEntity",
		"dcheckboxlabel",
		"getCodeIncludes",
		"positive",
		"dupefinished",
		"distance",
		"explode",
		"owner",
		"setNormal",
		"getParameterTypes",
		"inverseA",
		"propSpawn",
		"plySelectWeapon",
		"findPlayerBySteamID64",
		"isVehicle",
		"rotateAroundAxis",
		"maxHealth",
		"setOrigin",
		"removeLinkFromVehicle",
		"addSheet",
		"canSetName",
		"propSetBuoyancy",
		"egpNumObjects",
		"fileLoaded",
		"hasOutput",
		"runOnHTTP",
		"egpSetText",
		"transpose",
		"stopTrackDamage",
		"holoClipsAvailable",
		"getWeapons",
		"setLookAng",
		"unparent",
		"steamIDFrom64",
		"convertUnit",
		"getFlexScale",
		"j",
		"difference",
		"bNot",
		"findAllowPlayerProps",
		"findClipToClass",
		"setAlign",
		"egpGlobalPos",
		"bearing",
		"ioInputEntity",
		"cschr",
		"holoModelList",
		"length",
		"trim",
		"playersSuperAdmins",
		"rangerHitWater",
		"plyIsFrozen",
		"findRE",
		"atan",
		"egpRoundedBox",
		"fileCanList",
		"assert",
		"getValues",
		"findClipFromBox",
		"closeTab",
		"inVehicle",
		"fileLoadedList",
		"qi",
		"swapColumns",
		"plyResetSettings",
		"createWire",
		"runOnChat",
		"printTable",
		"isWeapon",
		"getCode",
		"fileClk",
		"plySetClip2",
		"surfaceArea",
		"plyStripAmmo",
		"plyStripWeapon",
		"plyDropWeapon",
		"gSetGroup",
		"easeInElastic",
		"runOnWeaponEquip",
		"lastWeaponSwitchNext",
		"remap",
		"bAnd",
		"dsGetType",
		"weaponSwitchClk",
		"runOnWeaponSwitch",
		"setFlexWeight",
		"npcFace",
		"dsProbe",
		"setFlexScale",
		"acos",
		"setEyeTargetWorld",
		"setEyeTargetLocal",
		"plyGod",
		"ping",
		"ragdollSetAng",
		"error",
		"setAngVelocity",
		"setBodygroup",
		"setVelocityInstant",
		"teamScore",
		"signalSetOnRemove",
		"setInertia",
		"noranger",
		"ragdollFreeze",
		"teams",
		"use",
		"setName",
		"propSetAngVelocity",
		"primaryAmmoType",
		"setXyz",
		"setAnimated",
		"propSetVelocity",
		"easeInOutBack",
		"tool",
		"propDeleteAll",
		"propSpawnUndo",
		"setOrderBelow",
		"propShadow",
		"easeInQuart",
		"propInertia",
		"propDrag",
		"heading",
		"rerotate",
		"deparent",
		"format",
		"getWeaponColor",
		"keyJump",
		"reposition",
		"sendMessage",
		"setLocalPos",
		"plyGiveAmmo",
		"propMakePersistent",
		"propGravity",
		"atanr",
		"propNotSolid",
		"propFreeze",
		"propDelete",
		"propSpawnEffect",
		"distance2",
		"isUnderWater",
		"swapElements",
		"ip",
		"holoReset",
		"sendMessageColor",
		"fromUnit",
		"gamemode",
		"getForce",
		"plyExitVehicle",
		"plyEnterVehicle",
		"plyNoclip",
		"setBackgroundBlur",
		"plyApplyForce",
		"plySetRunSpeed",
		"plySetGravity",
		"plySetJumpPower",
		"plySetMass",
		"plySetHealth",
		"plySetAng",
		"plyGetGravity",
		"array",
		"plyGetJumpPower",
		"plyGetMass",
		"particleCanCreate",
		"addChoices",
		"particleCollision",
		"particleGravity",
		"particleSetMaterialList",
		"vguiCloseOnPlayer",
		"particleSetStartAlpha",
		"setMultiSelect",
		"particleCreate",
		"getValueID",
		"vguiCanSend",
		"holoPos",
		"vguiCloseAll",
		"parentIndex",
		"vguiClkValuesTable",
		"vguiClkPlayer",
		"vguiClkPanelID",
		"eye",
		"setTitle",
		"runOnVgui",
		"getSideSpeed",
		"setEditProperty",
		"dmgType",
		"pop",
		"dmgDamage",
		"hsl2rgb",
		"deleteWire",
		"vonEncode",
		"secr",
		"dockMargin",
		"findIncludeModel",
		"signalSendDirect",
		"holoScaleUnits",
		"setAngles",
		"isSinglePlayer",
		"setEyeTarget",
		"setTrails",
		"dtextentry",
		"isValidPhysics",
		"effectCanPlay",
		"httpUrlEncode",
		"dehomogenized",
		"jsonDecodeTable",
		"propGetElasticity",
		"egpCursor",
		"angnorm",
		"getModel",
		"npcDisp",
		"roll",
		"hasWeapon",
		"holoRemainingSpawns",
		"hashNoComments",
		"ragdollSetPos",
		"plySetWalkSpeed",
		"applyForce",
		"getMin",
		"setDark",
		"setValue",
		"egpUnParent",
		"dmgApplyDamage",
		"emitSoundStop",
		"getBodygroups",
		"dslider",
		"plyDisableNoclip",
		"spawnClk",
		"linkToVehicle",
		"clip1Size",
		"keyDuck",
		"tanh",
		"findIncludeEntity",
		"holoParent",
		"egpVertices",
		"noentity",
		"propManipulate",
		"getWireInputs",
		"intersect",
		"weapons",
		"signalName",
		"int",
		"boxMax",
		"npcGoRun",
		"propSetAngVelocityInstant",
		"plyGetSpeed",
		"easeInQuad",
		"findClearBlackEntityList",
		"getMemoryUsedM",
		"hitSky",
		"plySetArmor",
		"lastSpawnTime",
		"timer",
		"setDirectionalLight",
		"steamIDTo64",
		"setAmbientLight",
		"autoAdjust",
		"setLookAt",
		"setCamPos",
		"blastDamage",
		"angSpeedLimit",
		"keyUse",
		"plyGiveWeapon",
		"sortByColumn",
		"easeInOutExpo",
		"getIndex",
		"fileStatus",
		"particleSetColor",
		"findClosest",
		"addLine",
		"diagonal",
		"setRenderMode",
		"hitGroup",
		"easeInOutCirc",
		"dlabel",
		"getAlpha",
		"holoInvertModel",
		"sizeToContents",
		"setWrap",
		"egpPolyOutline",
		"runOnFile",
		"mRotation",
		"findClipFromClass",
		"glonDecode",
		"speedLimit",
		"easeInCirc",
		"parent",
		"startSolid",
		"showCloseButton",
		"easeOutCubic",
		"noCollideAll",
		"isBulletDamage",
		"mass",
		"propCanCreate",
		"toTable",
		"getFlexName",
		"printColorC",
		"setStretchToFit",
		"inGodMode",
		"findClipFromModel",
		"log10",
		"getMouseDeltaX",
		"steamFriends",
		"setMinWidth",
		"plySetClip1",
		"nobone",
		"atan2",
		"isConstrained",
		"dsSetScope",
		"dmgClk",
		"sinh",
		"vonDecodeTable",
		"wirelink",
		"findClearWhiteList",
		"getTimers",
		"changed",
		"printColorDriver",
		"opcounter",
		"egpQueueScreenWirelink",
		"setYaw",
		"writeCell",
		"httpData",
		"dcheckbox",
		"getType",
		"vec2",
		"setSkin",
		"keyForward",
		"isAlive",
		"lerp",
		"trackDamage",
		"clkName",
		"health",
		"qk",
		"e",
		"findClearWhiteModelList",
		"pitch",
		"getEditProperty",
		"perf",
		"rangerPersist",
		"easeOutQuad",
		"map",
		"lastSpoke",
		"pi",
		"npcAttack",
		"nearestPoint",
		"cpuUsage",
		"setFidelity",
		"userID",
		"gGetShare",
		"isOnFire",
		"dsClk",
		"setPitch",
		"numPlayers",
		"trimLeft",
		"reset",
		"bone",
		"dmgPos",
		"noCollide",
		"add",
		"upper",
		"findInSphere",
		"boxCenterW",
		"table",
		"runOnSpawn",
		"getAmmoType",
		"easeInOutQuart",
		"easeInOutCubic",
		"aimBone",
		"positionLeftSolid",
		"isinf",
		"lastSpawnedPlayer",
		"isSteamFriend",
		"findClipFromSphere",
		"identity4",
		"runOnDeath",
		"easeInExpo",
		"findByClass",
		"setCollisionGroup",
		"playerUniqueId",
		"bShr",
		"keyWalk",
		"hitTexture",
		"vehicle",
		"pointContents",
		"findToArray",
		"egpRemove",
		"isType",
		"findExcludeModel",
		"boneCount",
		"holoScale",
		"dsLeaveGroup",
		"ln",
		"left",
		"egpMaterial",
		"teamColor",
		"dsClkName",
		"httpRequest",
		"easeInOutQuint",
		"particleSetEndAlpha",
		"setMagnitude",
		"teamMembers",
		"position",
		"easeOutCirc",
		"killPod",
		"findAllowEntities",
		"egpScrW",
		"aimEntity",
		"xyz",
		"setLength",
		"keyAttack2",
		"boneGravity",
		"outputs",
		"velL",
		"stress",
		"egpOrderAbove",
		"getVertices",
		"runOnDmg",
		"rowMatrix",
		"dsClearGroups",
		"isPlayer",
		"plySpawn",
		"lower",
		"easeOutQuint",
		"dsGetHash",
		"hostname",
		"particlesList",
		"egpCanSendUmsg",
		"holoShadow",
		"lastWeaponSwitchOld",
		"findInBox",
		"easeOutBack",
		"showWangs",
		"fileWrite",
		"keyReload",
		"sub",
		"findClipToRegion",
		"rotationAngle",
		"weaponEquipClk",
		"convarnum",
		"curtime",
		"dsGetSender",
		"steamID",
		"findPlayerBySteamID",
		"egpQueuePlayer",
		"keyClkPressed",
		"finite",
		"dsGetScope",
		"setDamage",
		"printColor",
		"players",
		"findUpdateRate",
		"trimRight",
		"isLan",
		"cscr",
		"length2",
		"getFlexID",
		"signalGetGroup",
		"hasFlexes",
		"holoParentAttachment",
		"getFlexWeight",
		"setLocalAng",
		"passenger",
		"signalGroup",
		"rangerDefaultZero",
		"creationTime",
		"hitWorld",
		"realtime",
		"typeidsArray",
		"holoEntity",
		"explodeRE",
		"setOverlayText",
		"findClearBlackClassList",
		"signalSetGroup",
		"findAllowClass",
		"setVelocity",
		"keyZoom",
		"hitNormal",
		"glonDecodeTable",
		"imag",
		"model",
		"aabbWorldMin",
		"getMaterial",
		"acosr",
		"cotr",
		"npcStop",
		"typeidsTable",
		"holoBodygroup",
		"setFlags",
		"eyeAngles",
		"hintDriver",
		"selfDestructAll",
		"holoDisableShading",
		"wrap",
		"vguiDefaultPlayers",
		"getNumeric",
		"egpRunOnQueue",
		"getMouseDeltaY",
		"fileReadList",
		"cbrt",
		"fileCanWrite",
		"fileLoad",
		"aabbMin",
		"boneFreeze",
		"gResetGroup",
		"lastDisconnectedPlayer",
		"typeids",
		"first",
		"keyvalues",
		"flip",
		"toLocalAng",
		"runOnUse",
		"systime",
		"easeOutSine",
		"npcShoot",
		"getUpMove",
		"runOnPlayerDisconnect",
		"npcGoWalk",
		"egpMaterialFromScreen",
		"setMax",
		"isEditable",
		"egpQueue",
		"fileListQueued",
		"gravity",
		"slerp",
		"remoteUpload",
		"holoDeleteAll",
		"egpClearQueue",
		"deaths",
		"removeNoCollideAll",
		"egpFiltering",
		"coshr",
		"fileListTable",
		"getName",
		"isServerLaggingS",
		"teamMemberCount",
		"weldAng",
		"propSetVelocityInstant",
		"runOnTick",
		"globalPos",
		"ejectPod",
		"httpSuccess",
		"getFidelity",
		"setRotateModel",
		"setFiltering",
		"findDisallowEntities",
		"runOnKeys",
		"removeAllAmmo",
		"findInCone",
		"vonError",
		"boxCenter",
		"easeInOutSine",
		"httpRequestUrl",
		"soundDuration",
		"runOnLast",
		"setDamageType",
		"maxPlayers",
		"findMax",
		"canDamage",
		"tickInterval",
		"animate",
		"fileList",
		"chatPrint",
		"deathClk",
		"lastDeathVictim",
		"qMod",
		"setEntity",
		"setHitBox",
		"setStart",
		"fileCanLoad",
		"boxSize",
		"isHiSpeed",
		"shootPos",
		"getCollisionGroup",
		"findDisallowClass",
		"egpToWorld",
		"easeInOutQuad",
		"findClipFromEntities",
		"enableConstraintUndo",
		"frags",
		"getMoveAngles",
		"damage",
		"minquota",
		"setKeepAspect",
		"aabbWorldMax",
		"removing",
		"setAttacker",
		"team",
		"values",
		"egpParentToCursor",
		"getServerFPS",
		"playerConnectClk",
		"egpSizeNum",
		"writeTable",
		"bones",
		"findCount",
		"type",
		"rangerAngle",
		"hostip",
		"distanceLeftSolid",
		"getDeleteOnClose",
		"lastDamage",
		"hit",
		"getDamageTrackedEntities",
		"showAlphaBar",
		"gTableSafe",
		"rotationVector",
		"getShowCloseButton",
		"dmgAttacker",
		"getFlexes",
		"lockPod",
		"eyeTraceCursor",
		"easeInOutBounce",
		"isExplosionDamage",
		"egpTrackerParent",
		"setSurfaceProp",
		"player"
	}
	
	self.PerformSleepThread = function (tick, cid)
		local cooperativeThread = coroutine.running ()
			
		timer.Create (self:InternalId () .. "internal_" .. cid, tick, 0,
			function ()
				coroutine.resume (cooperativeThread)
			end
		)
			
		coroutine.yield ()
	end
end

function self:ExtractFunctionsInformations (serializer, player, codeGen, e2Sharing)
	if not serializer then
		WireMultiAgent ["WireMultiAgent:Initializer"]:MiniLogger ("Warning: " .. self:InternalId () .. " expected serializer but received nothing.")
		
		return
	end
	
	if not self.ImportedSerialization [serializer] then
		WireMultiAgent ["WireMultiAgent:Initializer"]:MiniLogger ("Warning: " .. self:InternalId () .. " : Failed to import {ImportedSerialization}.")
		
		return
	end
	
	if self.ImportedSerialization [serializer] ["E2Functions"] then
		WireMultiAgent ["WireMultiAgent:Initializer"]:MiniLogger (self:InternalId () .. " : Found previous cache for Id {" .. serializer .. "}, re-using the cache..")
		
		self:PublishGlobalizedResult (serializer, player, codeGen, e2Sharing)
		
		return
	else
		self.ImportedSerialization [serializer] ["E2Functions"] = {}
	end

	self.MultiThreadSerializer = function ()
		for lineSpan, codeLine in pairs (self.ImportedSerialization [serializer] ["E2Code"]) do
			for _, functionImportedName in ipairs(self.ImportedE2Functions) do
				local dynamicSubStringMatching = "%f[%a]" .. functionImportedName .. "%f[%A]%("
					
				if string.find (codeLine, dynamicSubStringMatching) then
					table.insert (self.ImportedSerialization [serializer] ["E2Functions"], functionImportedName)
				end
			end
			
			self.PerformSleepThread (0.05, serializer)
		end
		
		WireMultiAgent ["WireMultiAgent:Initializer"]:MiniLogger (self:InternalId () .. " ended its routine, publishing..")
		self:PublishGlobalizedResult (serializer, player, codeGen, e2Sharing)
	end
	
	coroutine.wrap (self.MultiThreadSerializer) ()
end

function self:PublishGlobalizedResult (serializer, ply, expression2Code, e2Sharing)
	local convertToJsonLineSpan  	= util.TableToJSON (self.ImportedSerialization [serializer] ["LineSpan"])
	local convertToJsonE2Vars		= util.TableToJSON (self.ImportedSerialization [serializer] ["E2Vars"])
	local convertToJsonE2Functions 	= util.TableToJSON (self.ImportedSerialization [serializer] ["E2Functions"])
	
	local playerId 					= ply:SteamID 	()
	local playerName 				= ply:Nick 	 	() or ply:Name ()
	
	local expression2Name 			= self.ImportedSerialization [serializer] ["E2Name"]
	local expression2Desc 			= self.ImportedSerialization [serializer] ["E2Desc"]
	--local expression2Code 			= self.ImportedSerialization [serializer] ["E2Code"] Deprecated for being redundant. Timestamp: 28/12/2023.
	local expression2Globe 			= self.ImportedSerialization [serializer] ["IRTrace"]
	local expression2LineSpan		= self.ImportedSerialization [serializer] ["E2Lines"]

	WireMultiAgent ["WireMultiAgent:Submission"]:SubmitExpression2 (playerName, playerId, expression2Name, expression2Desc, expression2Code, expression2LineSpan, convertToJsonE2Vars, convertToJsonE2Functions, expression2Globe, convertToJsonLineSpan, e2Sharing, ply)
end

WireMultiAgent.MakeGateAway (self, WireMultiAgent, self:InternalId ())